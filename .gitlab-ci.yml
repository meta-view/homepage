stages:
  - build
  - publish
  - deploy

variables:
  APP_URL: meta-view.de
  APP_PORT: "80"
  APP_TITLE: "meta-view.de"
  DOCKER_IMAGE_TAGGED: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest

docker_build:
  stage: build
  image: docker:19.03.1
  script:
    - mkdir $CI_PROJECT_DIR/public
    - sh ./scripts/prepare-config.toml.sh > $CI_PROJECT_DIR/config.toml
    - docker build -t $DOCKER_IMAGE_TAGGED .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $DOCKER_IMAGE_TAGGED

docker_tag:
  stage: publish
  image: docker:19.03.1
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $DOCKER_IMAGE_TAGGED
    - docker tag $DOCKER_IMAGE_TAGGED $DOCKER_IMAGE_LATEST
    - docker push $DOCKER_IMAGE_LATEST
  only:
    - master

deploy_prod:
  stage: deploy
  image: innoq/gitlabci-docker-compose:alpine
  variables:
    APP_DEPLOY_URL: $APP_URL
    APP_DEPLOY_NAME: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  script:
    - sh ./scripts/prepare-docker-compose.sh > docker-compose.yml
    - echo "Deploying https://${APP_URL}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -p $APP_DEPLOY_NAME up -d --remove-orphans
  tags:
    - run.consolving.net
  only:
    - master
  environment:
    name: production
    url: https://$APP_URL
